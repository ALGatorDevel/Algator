package si.fri.algotest.view.tags;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.event.ActionListener;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.ScrollPaneConstants;

/**
 *
 * @author tomaz
 */
public class TTagEditor extends javax.swing.JPanel {
  
  JPanel contentPanel;
  final JScrollPane jsp;
  
  ArrayList<TTag> selectedItems;
  
  ActionListener onChange;
  
  boolean fromProgram;

  
  public TTagEditor() {
    this(300);
  }
  
  /**
   * Creates new form TTagEditor
   */
  public TTagEditor(int maxWidth) {
    initComponents();
    
    selectedItems = new ArrayList<>();
    
    contentPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
    contentPanel.setBackground(Color.white);
    jsp = new JScrollPane(contentPanel, ScrollPaneConstants.VERTICAL_SCROLLBAR_AS_NEEDED, ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);    
    tagsPanel.add(jsp);
    
    addComponentListener(new ComponentAdapter() {

      @Override
      public void componentResized(ComponentEvent e) {
        Dimension d = new Dimension(200,400);
        
        contentPanel.setPreferredSize(d);
        //contentPanel.setMinimumSize(d);
        //contentPanel.setMaximumSize(d);
      }
    });
    
    fromProgram = false;
  }

  public void setOnChangeAction(ActionListener action) {
    this.onChange = action;
  }
  
  public void setLabel(String label) {
    labelL.setText(label);
  }
  
  public void setItems(Object [] items) {
    ArrayList<Object> tagedItems = new ArrayList<>();
    for (Object tag : getTags()) 
      tagedItems.add(tag);
    
    ArrayList<Object> newItems = new ArrayList<>();
    for (Object item : items) 
      newItems.add(item);
    
    for (Object tag : tagedItems) {
      if (!newItems.contains(((TTag)tag).tagObject)) 
        untagItem((TTag)tag);
      else
        newItems.remove(((TTag)tag).tagObject);
    }
    
    
    
    DefaultComboBoxModel cbm = new DefaultComboBoxModel(newItems.toArray());
    itemsCB.setModel(cbm);    
  }
  
  
  void addSelectedItemToTags() {
    Object item = itemsCB.getSelectedItem();
    if (item != null) {
      itemsCB.removeItem(item);
      
      TTag tag = new TTag(item, this);
      selectedItems.add(tag);
      contentPanel.add(tag);
      revalidate();
      
      if (onChange != null)
        onChange.actionPerformed(null);
    }
  }
  
  public void untagItem(TTag tag) {
    Object tagObject = tag.getTagObject();
    
    fromProgram = true;
      itemsCB.addItem(tagObject);
    fromProgram = false;
    
    if (selectedItems.contains(tag))
      selectedItems.remove(tag);
    
    contentPanel.remove(tag);
    contentPanel.repaint();
    
    if (onChange != null)
      onChange.actionPerformed(null);

    
    revalidate();
  }
  
  // tole dodam, ker želim od zunaj (po branju datoteke) nastaviti več tagov;
  // morda ni povsem v skladu z logiko orodja! Dela kljub temu...
  public void setTags(Object [] newTags) {
    fromProgram = true;
      for (Object newTag : newTags) {
        itemsCB.setSelectedItem(newTag);
        addSelectedItemToTags();
      }
    fromProgram=false;
  }
  
  public Object[] getTags() {
    return selectedItems.toArray();
  }
  
  
  public Object[] getTagedItems() {
    Object[] tags = selectedItems.toArray();
    Object[] result = new Object[tags.length];
    for (int i=0; i<tags.length;i++) {
      result[i] = ((TTag)tags[i]).tagObject;
    }
    return result;
  }
  
  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    tagsPanel = new javax.swing.JPanel();
    itemsCB = new javax.swing.JComboBox();
    labelL = new javax.swing.JLabel();

    setBackground(new java.awt.Color(255, 255, 255));
    setLayout(new java.awt.GridBagLayout());

    tagsPanel.setBackground(new java.awt.Color(255, 255, 255));
    tagsPanel.setLayout(new java.awt.BorderLayout());
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = 2;
    gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.weighty = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
    add(tagsPanel, gridBagConstraints);

    itemsCB.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        itemsCBActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
    gridBagConstraints.weightx = 1.0;
    gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
    add(itemsCB, gridBagConstraints);

    labelL.setText("jLabel1");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
    gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
    add(labelL, gridBagConstraints);
  }// </editor-fold>//GEN-END:initComponents

  private void itemsCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemsCBActionPerformed
    if (!fromProgram)
      addSelectedItemToTags();
  }//GEN-LAST:event_itemsCBActionPerformed


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JComboBox itemsCB;
  private javax.swing.JLabel labelL;
  private javax.swing.JPanel tagsPanel;
  // End of variables declaration//GEN-END:variables
}
