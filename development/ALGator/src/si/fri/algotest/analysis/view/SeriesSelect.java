package si.fri.algotest.analysis.view;

import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.ButtonGroup;
import javax.swing.JCheckBox;
import javax.swing.JRadioButton;

/**
 *
 * @author tomaz
 */
public class SeriesSelect extends javax.swing.JPanel {

  ArrayList<JCheckBox>    cb = new ArrayList<>();
  ArrayList<JRadioButton> rb = new ArrayList<>();
  
  ActionListener onChange;
  
  boolean fromProgram = false; // was the change in ChackBox or Radio control triggered by a program command?
  
  /**
   * Creates new form SeriesSelect
   */
  public SeriesSelect(final ActionListener action) {
    initComponents();
    
    onChange = new ActionListener() {
      @Override
      public void actionPerformed(ActionEvent e) {
        if (!fromProgram) action.actionPerformed(e);
      }
    };
  }

  
  public void addFields(ArrayList<String> fields, int noOfInputParameters) {
    cb = new ArrayList<>();
    rb = new ArrayList<>();
    
    for(Component c : xSeries.getComponents())
      xSeries.remove(c);
    for(Component c : ySeries.getComponents())
      ySeries.remove(c);
    
    ButtonGroup gb = new ButtonGroup();
    
    for (int i = 0; i < fields.size(); i++) {
      JRadioButton r = new JRadioButton(fields.get(i));
      r.addActionListener(onChange);
      r.setSelected(i==0); 
      rb.add(r);
      gb.add(r);
      xSeries.add(r);
    
      JCheckBox c = new JCheckBox(fields.get(i));
      c.addActionListener(onChange);
      c.setSelected(i >= noOfInputParameters);
      cb.add(c);
      ySeries.add(c);
    }
    
    revalidate();
    repaint();
  }
  
  public int getXFieldID() {
    for (int i = 0; i < cb.size(); i++) {
      if (rb.get(i).isSelected()) return i;
    }
    return 0;
  }
  
  public int[] getYFieldsID() {
    int numberOfChecked=0;
    for (int i = 0; i < cb.size(); i++) {
      if (cb.get(i).isSelected())
        numberOfChecked++;
    }
    
    int num = 0;
    int[] result = new int[numberOfChecked];
    for (int i = 0; i < cb.size(); i++) 
      if (cb.get(i).isSelected())
        result[num++] = i;
    
    return result;
  } 
  
  
  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    jPanel1 = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    xSeries = new javax.swing.JPanel();
    ySeries = new javax.swing.JPanel();
    jLabel2 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 100, Short.MAX_VALUE)
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 100, Short.MAX_VALUE)
    );

    jLabel1.setText("jLabel1");

    setLayout(new java.awt.GridBagLayout());

    xSeries.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    add(xSeries, gridBagConstraints);

    ySeries.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 1;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.weightx = 1.0;
    add(ySeries, gridBagConstraints);

    jLabel2.setText("  X");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    add(jLabel2, gridBagConstraints);

    jLabel3.setText("  Y");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    add(jLabel3, gridBagConstraints);
  }// </editor-fold>//GEN-END:initComponents


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel xSeries;
  private javax.swing.JPanel ySeries;
  // End of variables declaration//GEN-END:variables
}
