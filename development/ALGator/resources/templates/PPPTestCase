import si.fri.algotest.entities.Variables;
import si.fri.algotest.execute.AbstractTestCase;

/**
 *
 * @author ...
 */
public class <PPP>TestCase extends AbstractTestCase {

  @Override
  public <PPP>Input getInput() {
    return (<PPP>Input) super.getInput(); 
  } 

  @Override
  public <PPP>Output getExpectedOutput() {
    return (<PPP>Output) super.getExpectedOutput();
  }
  
  
  @Override
  /**
   * TYPE0 test case generator. 
   * Method creates a test case based on the given test case parameters.
  **/
  public <PPP>TestCase testCaseGenerator(Variables inputParameters) {
    String path       = inputParameters.getVariable("Path",    "").getStringValue();              

    // TODO: 
    // ... read the values of the parameters and create a corresponding test case

    // ... Example: if test case is and array of integers of size "N"
    // int size = inputParameters.getVariable("N", 10).getIntValue();              
    // int [] array = new int[size];

                    
    
    // create a test case 
    <PPP>TestCase <pPP>TestCase = new <PPP>TestCase();                
    <pPP>TestCase.setInput(new <PPP>Input(/* TODO: add parameters for constructor */));    
    <pPP>TestCase.getInput().setParameters(inputParameters);    
    <pPP>TestCase.setExpectedOutput(new <PPP>Output(/* TODO: add parameters for constructor */));
    
    return <pPP>TestCase;
  }

/* 
 * Optionally: add additional generators (testCaseGenerator1() for TYPE1, 
 * testCaseGenerator2() for TYPE2, ...)
 *
 */
//  @Override
//  public <PPP>TestCase testCaseGenerator1(Variables inputParameters) {
//    // ... create a test case based on given generating parameters
//                    
//    // create a test case 
//    <PPP>TestCase <pPP>TestCase = new <PPP>TestCase();                
//    <pPP>TestCase.setInput(new <PPP>Input(/* TODO: add parameters for constructor */));    
//    <pPP>TestCase.getInput().setParameters(inputParameters);    
//    <pPP>TestCase.setExpectedOutput(new <PPP>Output(/* TODO: add parameters for constructor */));
//    
//    return <pPP>TestCase;
//  }


}
